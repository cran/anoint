mimfit.fit <- function(object,type=c("obo","uim","pim.exact","pim.approx")){#
	object@fits[[type]]#
}#
#
setGeneric("fit",function(object,...)standardGeneric("fit"))#
setMethod("fit","mim.fit",mimfit.fit)
example(mim.git)
example(mim.fit)
fit(fit)
mimfit.fit(fit)
mimfit.fit <- function(object,type=c("obo","uim","pim.exact","pim.approx")){#
	object@fits[type]#
}
mimfit.fit(fit)
library(mim)
example(mim.fit)
?setGeneric
library(mim)
example(mim.fit)
library(mim)
example(mim)
getSlots("mim")
getSlots("formula.mim")
library(mim)
example(onebyone)
fits
example(uim)
fit
simsolvd$event <- 1-simsolvd$censor#
#
obj <- mim(event~(age+beat+lvef+cardratio+sodium)*trt,#
                 family = "binomial", data = simsolvd)
obj <- mim(event~(age+beat+lvef+cardratio+sodium)*trt,#
                 family = "binomial", data = simsolvd, select=TRUE)
library(mim)#
data(simsolvd)#
#
simsolvd$event <- 1-simsolvd$censor
obj <- mim(event~(age+beat+lvef+cardratio+sodium)*trt,#
                 family = "binomial", data = simsolvd, select=TRUE)
?print
?print.formula
library(mim)#
data(simsolvd)#
#
simsolvd$event <- 1-simsolvd$censor#
#
obj <- mim(event~(age+beat+lvef+cardratio+sodium)*trt,#
                 family = "binomial", data = simsolvd,select=TRUE)
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt,#
                  family = "binomial", data = solvd, select=TRUE, penalty.factor=rep(1,5))#
#
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt,#
                  family = "binomial", data = solvd, select=TRUE, penalty.factor=c(1,1,1,1,1))#
#
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt,#
                  family = "binomial", data = solvd, select=TRUE)
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt,#
                  family = "binomial", data = simsolvd, select=TRUE, penalty.factor=rep(1,5))#
#
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt,#
                  family = "binomial", data = simsolvd, select=TRUE, penalty.factor=c(1,1,1,1,1))#
#
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt,#
                  family = "binomial", data = simsolvd, select=TRUE)
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt,#
                  family = "binomial", data = simsolvd, select=TRUE, penalty.factor=rep(1,6))#
#
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt,#
                  family = "binomial", data = simsolvd, select=TRUE, penalty.factor=c(1,1,1,1,1,1))#
#
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt,#
                  family = "binomial", data = simsolvd, select=TRUE)
logical(TRUE)
is.logical(0)
f <- function(x,...){#
	arg.list <- list(...)#
#
	if(!is.logical(arg.list$na.rm))#
	{	#
	arg.list$na.rm <- TRUE#
	`...` <- arg.list#
	}#
	mean(x,...)#
}
f(c(1,2,3,NA))
f(c(1,2,3,NA),na.rm=T)
f(c(1,2,3,NA),na.rm=0)
f <- function(x,...){#
	arg.list <- list(...)#
#
	if(!is.logical(arg.list$na.rm))#
	{	#
	arg.list$na.rm <- TRUE#
	print(arg.list)#
	}#
	mean(x,...)#
}
f(c(1,2,3,NA),na.rm=0)
?`...`
class("...")
?`...`
?args
f <- function(x,...){#
	arg.list <- list(...)#
#
	if(!is.logical(arg.list$na.rm))#
	{	#
	arg.list$na.rm <- TRUE#
	}#
 	do.call("mean",arg.list)#
}
f(c(1,2,3,NA),na.rm=0)
f <- function(x,...){#
	arg.list <- list(...)#
#
	if(!is.logical(arg.list$na.rm))#
	{	#
	arg.list$na.rm <- TRUE#
	arg.list$x <- x#
	}#
 	do.call("mean",arg.list)#
}
f(c(1,2,3,NA),na.rm=0)
example(mim)
null.interaction <- data.mim(#
                             alpha = c(log(.5),log(.5*.75)),#
                             beta = log(c(1.5,2)),#
                             gamma = rep(1,2),#
                             mean = c(0,0),#
                             vcov = diag(2),#
                             type="survival", n = 500#
                             )#
#
head(null.interaction)#
#
object <- mim(Surv(y, event)~(V1+V2)*trt,data=null.interaction,family="coxph")
object <- mim(Surv(y, event)~(V1+V2)*trt,data=null.interaction,family="coxph",select=TRUE)
object <- mim(Surv(y, event)~(V1+V2)*trt,data=null.interaction,family="coxph",select=TRUE,penalty.factor=c(1,1))
object <- mim(Surv(y, event)~(V1+V2)*trt,data=null.interaction,family="coxph",select=TRUE,penalty.factor=c(1,1,1))
object <- mim(Surv(y, event)~(V1+V2)*trt,data=null.interaction,family="coxph",select=TRUE,penalty.factor=c(1))
object <- mim(Surv(y, event)~(V1+V2)*trt,data=null.interaction,family="coxph",select=TRUE,penalty.factor=c(1,0))
object <- mim(Surv(y, event)~(V1+V2)*trt,data=null.interaction,family="coxph",select=TRUE,penalty.factor=c(0,0))
object <- mim(Surv(y, event)~(V1+V2)*trt,data=null.interaction,family="coxph",select=TRUE,penalty.factor=c(0,1))
object <- mim(Surv(y, event)~(V1+V2)*trt,data=null.interaction,family="coxph",select=TRUE,penalty.factor=c(0,0))
object <- mim(Surv(y, event)~(V1+V2)*trt,data=null.interaction,family="coxph",select=TRUE,penalty.factor=c(0,0,0))
head(null.interaction)
null.interaction <- data.mim(#
                             alpha = c(log(.5),log(.5*.75)),#
                             beta = log(c(1.5,2),1,1),#
                             gamma = rep(1,4),#
                             mean = c(0,0,0,0),#
                             vcov = diag(4),#
                             type="survival", n = 500#
                             )
null.interaction <- data.mim(#
                             alpha = c(log(.5),log(.5*.75)),#
                             beta = log(c(1.5,2,1,1)),#
                             gamma = rep(1,4),#
                             mean = c(0,0,0,0),#
                             vcov = diag(4),#
                             type="survival", n = 500#
                             )
object <- mim(Surv(y, event)~(V1+V2+V3+V4)*trt,data=null.interaction,family="coxph",select=TRUE)
object <- mim(Surv(y, event)~(V1+V2+V3+V4)*trt,data=null.interaction,family="coxph",select=TRUE,penalty.factor=c(1,1,0,1))
object <- mim(Surv(y, event)~(V1+V2+V3+V4)*trt,data=null.interaction,family="coxph",select=TRUE,penalty.factor=c(1,1,1,0,1))
library(mim)
example(mim)
library(mim)
example(mim)
library(mim)
example(mim)
library(mim)
example(mim)
library(mim)
example(mim)
object@formula
class(object@formula)
library(mim)
example(mim)
object <- mim(y~(V1+V2+V3+V4)*trt,data=null.interaction,#
			select=TRUE,penalty.factor=c(0,0,1,1))
library(mim)
?obo
example(obo)
example(mim.fit)
example(pim)
library(mim)
example(pim)
traceback()
fit <- pim(object)
fit@vcov
confint(fit)
getSlots("pim")
coef(fit)
class(fit)
fit@coef
library(mim)
example(pim)
coef(fit)
getSlots("pim")
coef(fit)[-"theta"]
library(mim)
example(pim)
vcov(fit)
library(mim)
example(pim)
library(mim)
example(pim)
library(mim)
example(mim)
example(pim)
null.interaction <- data.mim(#
                             alpha = c(log(.5),log(.5*.75)),#
                             beta = log(c(1.5,2)),#
                             gamma = rep(1,2),#
                             mean = c(0,0),#
                             vcov = diag(2),#
                             type="survival", n = 500#
                             )#
#
head(null.interaction)#
#
object <- mim(Surv(y, event)~(V1+V2)*trt,data=null.interaction,family="coxph")
pim(object)
fit <- pim(object)
summary(fit)
fit <- pim(object,n=50)
library(mim)
example(pim)
fit@exact
dim(object@boot.pim)
dim(fit@boot.pim)
fit@exact&all(dim(fit@boot.pim)==c(1,1))
getSlots("pim")
getSlots("formula.mim")
library(mim)
example(pim)
pim.interaction <- data.mim(#
                             alpha = c(log(.2/.8),log(.2*.75/(1-.2*.75))),#
                             beta = log(c(1.25,1.5)),#
                             gamma = rep(1.2,2),#
                             mean = c(0,0),#
                             vcov = diag(2),#
                             type="binomial", n = 500#
                             )#
object <- mim(y~(V1+V2)*trt,data=pim.interaction,family="binomial")#
#
object#
#
fit <- pim(object)#
#
fit
confint(fit)
library(mim)
example(pim)
pim.interaction <- data.mim(#
                             alpha = c(log(.2/.8),log(.2*.75/(1-.2*.75))),#
                             beta = log(c(1.25,1.5)),#
                             gamma = rep(1.2,2),#
                             mean = c(0,0),#
                             vcov = diag(2),#
                             type="binomial", n = 500#
                             )#
object <- mim(y~(V1+V2)*trt,data=pim.interaction,family="binomial")#
#
object#
#
fit <- pim(object)#
#
fit
confint(fit)
fit <- pim(object, n=50)#
summary(fit)
fit <- pim(object)#
summary(fit)
confint(fit)
coef(fit)
data(simsolvd)
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt, data=solvd)
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt, data=simsolvd)
forest(obj)
obj <- mim(censor ~ (age + beat+lvef+cardratio+sodium)*trt, data=simsolvd)
forest(obj)
library(mim)
data(simsolvd)
simsolvd$event <- 1-simsolvd$censor
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt, data=solvd)
obj <- mim(event ~ (age + beat+lvef+cardratio+sodium)*trt, data=simsolvd)
obj
forest(obj)
obj <- mim(event ~ (I(age>60)+current)*trt, data=simsolvd)
obj <- mim(event ~ (factor(age>60)+current)*trt, data=simsolvd)
obj <- mim(event ~ (age+current)*trt, data=simsolvd)
obj <- mim(event ~ (factor(age>60)+current)*trt, data=simsolvd)
traceback()
obj <- mim(event ~ (I(factor(age>60))+current)*trt, data=simsolvd)
head(simsolvd)
obj <- mim(event ~ (nyha+cardratio+current)*trt, data=simsolvd)
forest(obj)
vcov(fit)
example(fit)
example(pim)
vcov(fit)
fit <- pim(object)
vcov(fit)
library(mim)
example(pim)
setwd("~/master/code/mim/inst/doc/")
Sweave("mim.Rnw")
Sweave("mim.Rnw")
Sweave("mim.Rnw")
Sweave("mim.Rnw")
pim.fit
names(obo.fit)
Sweave("mim.Rnw")
Sweave("mim.Rnw")
Sweave("mim.Rnw")
library(ggplot2)#
#
meta <- read.table(file="~/master/project/eagle/data/meta.csv",sep=",",h=T)#
meta$relative <- ifelse(meta$measure=="OR"|meta$measure=="RR"|meta$measure=="HR",1,0)#
meta$female <- factor(meta$female,lab=c("Male","Female"))#
meta$casecontrol <- factor(meta$casecontrol,lab=c("Cohort","Case-control"))#
meta$histology <- factor(meta$histology,lev=c("all","adeno","squamous","small-cell","large-cell"),lab=c("All types","Adenocarcinoma","Squamous","Small-cell","Large-cell"),order=TRUE)#
#
forest <- function(formula,data,aes,...){#
	if(is.null(formula))#
		plot <- ggplot(data,aes)+geom_point(shape=19,size=6,alpha=.7)+scale_colour_hue(h=c(260,360),l=30,direction=-1)+theme_bw()+scale_size(range=c(1,10))#
	else#
		plot <- ggplot(data,aes)+geom_point(shape=19,alpha=.7)+facet_wrap(formula,...)+scale_colour_hue(h=c(260,360),l=30,direction=-1)+theme_bw()+scale_size(range=c(1,12))#
return(plot)#
}#
# INTENSITY CASE-CONTROL#
plot.data <- subset(meta,exposure=="py"&relative==1&casecontrol=="Case-control"&(level=="All types"|level=="Adenocarcinoma"))#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))
plot.data <- subset(meta,exposure=="py"&relative==1&mortality==0&(level=="All types"|level=="Adenocarcinoma"))#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))
head(plot.data)
head(meta)
plot.data <- subset(meta,exposure=="py"&relative==1&mortality==0&(histology=="All types"|histology=="Adenocarcinoma"))#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))
head(plot.data)
p <- forest(~casecontrol,plot.data,aes(x=level,col=female,y=estimate,size=precision),nrow=1)#
p <- p+scale_y_log10("",breaks=c(1,5,10,20,100),lim=c(1,100))+scale_x_continuous("",breaks=c(10,20,30,40),limits=c(0,45))+guides(size=FALSE,col=guide_legend(title=NULL))
p
head(meta)
meta <- read.table(file="~/master/project/eagle/data/meta.csv",sep=",",h=T)#
meta$relative <- ifelse(meta$measure=="OR"|meta$measure=="RR"|meta$measure=="HR",1,0)#
meta$female <- factor(meta$female,lab=c("Male","Female"))
head(meta)
meta$casecontrol <- factor(meta$casecontrol,lev=c(1,0),lab=c("Odds ratio","Risk ratio"))#
meta$histology <- factor(meta$histology,lev=c("all","adeno","squamous","small-cell","large-cell"),lab=c("All types","Adenocarcinoma","Squamous","Small-cell","Large-cell"),order=TRUE)
plot.data <- subset(meta,exposure=="py"&relative==1&mortality==0&(histology=="All types"|histology=="Adenocarcinoma"))#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))#
p <- forest(~casecontrol,plot.data,aes(x=level,col=female,y=estimate,size=precision),nrow=1)#
p <- p+scale_y_log10("",breaks=c(1,5,10,20,100),lim=c(1,100))+scale_x_continuous("",breaks=c(10,20,30,40),limits=c(0,45))+guides(size=FALSE,col=guide_legend(title=NULL))
p
plot.data <- subset(meta,exposure=="py"&relative==1&mortality==0&(histology=="All types"|histology=="Adenocarcinoma"))#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))#
p <- forest(~casecontrol,plot.data,aes(x=level,col=female,y=estimate,size=precision),nrow=1)#
p <- p+scale_y_log10("",breaks=c(1,5,10,20,100),lim=c(1,100))+scale_x_continuous("",breaks=c(10,20,30,40,50,60),limits=c(0,65))+guides(size=FALSE,col=guide_legend(title=NULL))
p
png("~/master/project/eagle/doc/plots/combined_cigsperday.png",height=480,width=480*1.8)#
p+opts(legend.text=theme_text(size=15),strip.text.x=theme_text(size=15),axis.text.x=theme_text(size=15),axis.text.y=theme_text(size=15))#
dev.off()
plot.data <- subset(meta,exposure=="cd"&relative==1&(histology=="All types"|histology=="Adenocarcinoma"))#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))#
p <- forest(~casecontrol,plot.data,aes(x=level,col=female,y=estimate,size=precision),nrow=1)#
p <- p+scale_y_log10("",breaks=c(1,5,10,20,100),lim=c(1,100))+scale_x_continuous("",breaks=c(10,20,30,40),limits=c(0,45))+guides(size=FALSE,col=guide_legend(title=NULL))
plot.data
plot.data <- plot.data[!(plot.data$casecontrol=="Risk ratio"&plot.data$mortality==0),]
plot.data
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))#
p <- forest(~casecontrol,plot.data,aes(x=level,col=female,y=estimate,size=precision),nrow=1)#
p <- p+scale_y_log10("",breaks=c(1,5,10,20,100),lim=c(1,100))+scale_x_continuous("",breaks=c(10,20,30,40),limits=c(0,45))+guides(size=FALSE,col=guide_legend(title=NULL))
p
p
range(plot.data$est)
plot.data <- subset(meta,exposure=="cd"&relative==1&(histology=="All types"|histology=="Adenocarcinoma"))#
plot.data <- plot.data[!(plot.data$casecontrol=="Risk ratio"&plot.data$mortality==0),]#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))#
p <- forest(~casecontrol,plot.data,aes(x=level,col=female,y=estimate,size=precision),nrow=1)#
p <- p+scale_y_log10("",breaks=c(1,5,10,20,40),lim=c(1,40))+scale_x_continuous("",breaks=c(10,20,30,40),limits=c(0,45))+guides(size=FALSE,col=guide_legend(title=NULL))
p
plot.data <- subset(meta,exposure=="cd"&relative==1&(histology=="All types"|histology=="Adenocarcinoma"))#
plot.data <- plot.data[!(plot.data$casecontrol=="Risk ratio"&plot.data$mortality==0),]#
plot.data <- plot.data[plot.data$study!="Morabia1991",]#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))#
p <- forest(~casecontrol,plot.data,aes(x=level,col=female,y=estimate,size=precision),nrow=1)#
p <- p+scale_y_log10("",breaks=c(1,5,10,20,40),lim=c(1,40))+scale_x_continuous("",breaks=c(10,20,30,40),limits=c(0,45))+guides(size=FALSE,col=guide_legend(title=NULL))
p
png("~/master/project/eagle/doc/plots/combined_cigsperday.png",height=480,width=480*1.8)#
p+opts(legend.text=theme_text(size=15),strip.text.x=theme_text(size=15),axis.text.x=theme_text(size=15),axis.text.y=theme_text(size=15))#
dev.off()
INTENSITY CASE-CONTROL#
plot.data <- subset(meta,exposure=="py"&relative==1&mortality==0&(histology=="All types"|histology=="Adenocarcinoma"))#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))#
p <- forest(~casecontrol,plot.data,aes(x=level,col=female,y=estimate,size=precision),nrow=1)#
p <- p+scale_y_log10("",breaks=c(1,5,10,20,100),lim=c(1,100))+scale_x_continuous("",breaks=c(10,20,30,40,50,60),limits=c(0,65))+guides(size=FALSE,col=guide_legend(title=NULL))#
#
png("~/master/project/eagle/doc/plots/combined_packyears.png",height=480,width=480*1.8)#
p+opts(legend.text=theme_text(size=15),strip.text.x=theme_text(size=15),axis.text.x=theme_text(size=15),axis.text.y=theme_text(size=15))#
dev.off()#
#INTENSITY COHORT#
plot.data <- subset(meta,exposure=="cd"&relative==1&(histology=="All types"|histology=="Adenocarcinoma"))#
plot.data <- plot.data[!(plot.data$casecontrol=="Risk ratio"&plot.data$mortality==0),]#
plot.data <- plot.data[plot.data$study!="Morabia1991",]#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))#
p <- forest(~casecontrol,plot.data,aes(x=level,col=female,y=estimate,size=precision),nrow=1)#
p <- p+scale_y_log10("",breaks=c(1,5,10,20,40),lim=c(1,40))+scale_x_continuous("",breaks=c(10,20,30,40),limits=c(0,45))+guides(size=FALSE,col=guide_legend(title=NULL))#
#
png("~/master/project/eagle/doc/plots/combined_cigsperday.png",height=480,width=480*1.8)#
p+opts(legend.text=theme_text(size=15),strip.text.x=theme_text(size=15),axis.text.x=theme_text(size=15),axis.text.y=theme_text(size=15))#
dev.off()
forest <- function(formula,data,aes,...){#
	if(is.null(formula))#
		plot <- ggplot(data,aes)+geom_point(shape=19,size=6,alpha=.7)+scale_colour_hue(h=c(260,360),l=30,direction=-1)+theme_bw()+scale_size(range=c(1,10))#
	else#
		plot <- ggplot(data,aes)+geom_point(shape=19,alpha=.7)+facet_wrap(formula,...)+scale_colour_hue(h=c(260,360),l=30,direction=-1)+theme_bw()+scale_size(range=c(1,16))#
return(plot)#
}#
# INTENSITY CASE-CONTROL#
plot.data <- subset(meta,exposure=="py"&relative==1&mortality==0&(histology=="All types"|histology=="Adenocarcinoma"))#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))#
p <- forest(~casecontrol,plot.data,aes(x=level,col=female,y=estimate,size=precision),nrow=1)#
p <- p+scale_y_log10("",breaks=c(1,5,10,20,100),lim=c(1,100))+scale_x_continuous("",breaks=c(10,20,30,40,50,60),limits=c(0,65))+guides(size=FALSE,col=guide_legend(title=NULL))#
#
png("~/master/project/eagle/doc/plots/combined_packyears.png",height=480,width=480*1.8)#
p+opts(legend.text=theme_text(size=18),strip.text.x=theme_text(size=18),axis.text.x=theme_text(size=18),axis.text.y=theme_text(size=18))#
dev.off()#
#INTENSITY COHORT#
plot.data <- subset(meta,exposure=="cd"&relative==1&(histology=="All types"|histology=="Adenocarcinoma"))#
plot.data <- plot.data[!(plot.data$casecontrol=="Risk ratio"&plot.data$mortality==0),]#
plot.data <- plot.data[plot.data$study!="Morabia1991",]#
plot.data$precision <- 4/(log(plot.data$upper)-log(plot.data$lower))#
p <- forest(~casecontrol,plot.data,aes(x=level,col=female,y=estimate,size=precision),nrow=1)#
p <- p+scale_y_log10("",breaks=c(1,5,10,20,40),lim=c(1,40))+scale_x_continuous("",breaks=c(10,20,30,40),limits=c(0,45))+guides(size=FALSE,col=guide_legend(title=NULL))#
#
png("~/master/project/eagle/doc/plots/combined_cigsperday.png",height=480,width=480*1.8)#
p+opts(legend.text=theme_text(size=18),strip.text.x=theme_text(size=18),axis.text.x=theme_text(size=18),axis.text.y=theme_text(size=18))#
dev.off()#
# RISK DIFFERENCE MEASURES COHORT#
plot.data <- subset(meta,study=="Sobue1988"&measure=="RD")#
p <- forest(NULL,plot.data,aes(x=histology,col=female,y=estimate))#
p <- p+scale_y_continuous("")+scale_x_discrete("")+guides(col=guide_legend(title=NULL))#
#
png("~/master/project/eagle/doc/plots/risk_difference.png",height=480,width=480*1.8)#
p+opts(legend.text=theme_text(size=18),axis.text.x=theme_text(size=18),axis.text.y=theme_text(size=18))#
dev.off()
install.packages("RNCBI")
library("RNCBI")
ncbi <- NCBI()
efetch <- EFetch(ncbi,"pubmed")
efetch <- setRequestParameter(efetch,"id",c(22158387))
efetch <- requestEFetch(efetch)
results <- getResults(efetcj)
results <- getResults(efetch)
dim(results)
results
names(results)
results$idlist
head(results[[1]])
str(results)
?ESearch
esearch <- ESearch(ncbi)
esearch <- setRequestParameter(esearch)
esearch <- setRequestParameter(esearch,"db","pubmed")
esearch <- setRequestParameter(esearch,"term","MGUS[ti]")
esearch <- requestESearch(esearch)
res <- getResults(esearch)
names(res)
res$count
?getResults
res$webenv
res$querykey
head(res$idlist)
ids <- unlist(res$idlist)
head(ids)
head(efetch)
names(efetch)
length(efetch)
efetch
efetch <- setRequestParameter(efetch,"id",ids)
resfetch <- getResults(efetch)
length(resfetch)
names(resfetch)
length(resfetch[[2]])
length(resfetch$idlist)
head(resfetch$idlist)
resfetch
efetch <- EFetch(ncbi,"pubmed")
efetch <- setRequestParameter(efetch,"id",ids)
efetch <- requestEFetch(efetch)
